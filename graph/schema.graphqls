type Post {
  id: Int!
  userId: Int!
  text: String!
  header: String!
  createdAt: String!
  is_closed: Boolean!
  comments: [Comment!]!
}
type Comment {
  id: Int!
  postId: Int!
  parentId: Int
  userId: Int!
  text: String!
  level: Int!
  createdAt: String!
  comments: [Comment!]!
}
type User {
  id: Int!
  login: String!
  password: String!
  name: String!
}
input Pagination {
  offset: Int!
  limit: Int!
}

type Query {
  posts(input: Pagination!): [Post!]!
  post(postId: Int!, limit: Int!): Post!
  paginationComment(postId: Int!, pagination: Pagination!): [Comment]!
}

input NewPost {
  header: String!
  text: String!
  userId: Int!
}

input NewComment {
  parentId: Int
  text: String!
  userId: Int!
  postId: Int!
  level: Int!
}

input NewUser {
  name: String!
  login: String!
  password: String!
}

type Mutation {
  createPost(input: NewPost!): Int!
  createComment(input: NewComment!):Int!
  createUser(input: NewUser!): Int!
  closePost(postID: Int!): Boolean!
}


type Notification {
  text: String!
  issuerId: Int!
}

type Subscription {
  notification(postId: Int!): Notification!
}
